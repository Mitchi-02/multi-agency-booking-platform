server:
  port: ${PORT:8001}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://ms-registry:8888/eureka

spring:
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    users-topic: ${USERS_TOPIC:users}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest
      group-id: ${spring.application.name}
  application:
    name: ms-users
  data:
    redis:
      database: 0
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      username: ${REDIS_USERNAME}
      timeout: 60000
  cache:
    redis:
      time-to-live: 120000
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_DATABASE:project_2cs}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:aaa}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  servlet:
    multipart:
      max-request-size: 2MB

jwt:
  secret: ${JWT_SECRET:secret}
  issuer: ${JWT_ISSUER:project_2cs}

gcp:
  project_id: ${GOOGLE_STORAGE_PROJECT_ID}
  bucket_id: ${GOOGLE_STORAGE_BUCKET}
  client_id: ${GOOGLE_STORAGE_CLIENT_ID}
  client_email: ${GOOGLE_STORAGE_CLIENT_EMAIL}
  private_key_id: ${GOOGLE_STORAGE_PRIVATE_KEY_ID}
  private_key: ${GOOGLE_STORAGE_PRIVATE_KEY}

